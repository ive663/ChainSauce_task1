// /// Main structure of a cli application.
// #[derive(Parser)]
// struct CLI {
//     #[derive()]
//     /// The name of the program. Defaults Args[0]
//     name: String,
//     /// Description of the program.
//     usage: String,
// }

// /// Command is a subcommand for a CLI.
// struct Command {
//     /// The name of the command
//     name: String,
//     /// The function to call when this command is invoked
//     // action: Result<Fn>,
//     /// A short description of the usage of this command
//     usage: String,
//     /// A longer explanation of how the command works
//     description: String,
//     /// List of flags to parse
//     flags: [Flag, 16],
// }

// /// Flag is a common interface related to parsing flags in cli.
// struct Flag{
//     /// The name of the flag
//     name: String,
//     /// A short description of the usage of this flag
//     usage: String,
//     /// A list of aliases of this flag
//     aliases: [String, 16]
//     /// The value that contains this flag.
//     value: String,
// }

  // let flags: [Flag, 16] = [
    //     Flag{
    //         name: String::from("host"),
    //         usage: String::("host name of request")
    //     },
    // ]

    // let app = CLI{
    //     name: String::from("gnfd-cmd"),
    //     usage: String::from("cmd tool for supporting making request to greenfield")
    //     flags: flags,
    // };

    // println!("{}", app.flags[0].name);

// [[bin]]
// name = "rpc-client"
// path = 

// fn rpcClient(){
//     let channel = Channel::from_static("/cosmos.bank.v1beta1.Query/Balance")
//         .connect()
//         .await?;
//     let mut client = ::new(channel);
//     let request = Request::new();

//     let response = client.send(request).await?.into_inner();
//     println!("RESPONSE={:?}", response);
// }

// .unwrap_or(CliConfig{
        //     chain_id: String::from("97"),
        //     password_file: String::from("password.txt"),
        //     rpc_addr: String::from("https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org:443"),
        // });